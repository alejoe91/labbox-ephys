const text: string = "import spikeextractors as se\nimport numpy as np\nimport labbox_ephys as le\nimport kachery_p2p as kp\n\n# adjust these values\nfeed_name = 'labbox-ephys-default'\nworkspace_name = 'default'\nrecording_label = 'simulated_recording'\nduration_sec = 50 # duration of simulated recording\nnum_channels = 8 # num. channels in simulated recording\nnum_units = 5 # num units\nseed = 1 # random number generator seed\n\ndef prepare_recording_sorting():\n    # Simulate a recording (toy example)\n    recording, sorting = se.example_datasets.toy_example(duration=duration_sec, num_channels=num_channels, K=num_units, seed=seed)\n    R = le.LabboxEphysRecordingExtractor.from_memory(recording, serialize=True, serialize_dtype=np.int16)\n    S = le.LabboxEphysSortingExtractor.from_memory(sorting, serialize=True)\n    return R, S\n\nrecording, sorting_true = prepare_recording_sorting()\nsorting_label = 'true'\nfeed = kp.load_feed(feed_name, create=True)\nprint(f'Feed URI: {feed.get_uri()}')\nR = le.import_recording(feed=feed, workspace_name=workspace_name, recording=recording, recording_label=recording_label)\nS = le.import_sorting(feed=feed, workspace_name=workspace_name, recording=recording, sorting=sorting_true, recording_id=R['recordingId'], sorting_label=sorting_label)"

export default text